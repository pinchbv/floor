name: CI

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  floor-annotation:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    container:
      image: google/dart:2.12-beta

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install dependencies
        working-directory: floor_annotation
        run: pub get

      - name: Analyze
        working-directory: floor_annotation
        run: dartanalyzer --fatal-infos --fatal-warnings .

      - name: Format
        working-directory: floor_annotation
        run: dartfmt -n --set-exit-if-changed .

  floor-generator:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    container:
      image: google/dart:2.12-beta

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install dependencies
        working-directory: floor_generator
        run: pub get

      - name: Analyze
        working-directory: floor_generator
        run: dartanalyzer --fatal-infos --fatal-warnings .

      - name: Format
        working-directory: floor_generator
        run: dartfmt -n --set-exit-if-changed .

      - name: Run tests
        if:
        working-directory: floor_generator
        run: pub run test_cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: floor_generator
          file: ./floor_generator/coverage/lcov.info

  floor:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    timeout-minutes: 10

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: beta

      - name: Install dependencies
        run: flutter packages get
        working-directory: floor

      - name: Run generator
        run: flutter packages pub run build_runner build
        working-directory: floor

      - name: Analyze
        run: flutter analyze
        working-directory: floor

      - name: Install SQLite
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get -y update
          sudo apt-get -y install sqlite3 libsqlite3-dev

      - name: Run tests
        run: flutter test --coverage --coverage-path coverage/lcov.info
        working-directory: floor

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: floor
          file: ./floor/coverage/lcov.info

  example:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: beta

      - name: Install dependencies
        run: flutter packages get
        working-directory: example

      - name: Analyze
        run: flutter analyze
        working-directory: example

      - name: Install SQLite
        run: |
          sudo apt-get -y update
          sudo apt-get -y install sqlite3 libsqlite3-dev

      - name: Run tests
        run: flutter test
        working-directory: example
