name: CI

on:
  push:
    branches:
      - develop
  pull_request:

env:
  FLUTTER_CHANNEL: stable

jobs:
  floor-annotation:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    container:
      image: google/dart:latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install dependencies
        working-directory: floor_annotation
        run: pub get

      - name: Analyze
        working-directory: floor_annotation
        run: dartanalyzer --fatal-infos --fatal-warnings .

      - name: Format
        working-directory: floor_annotation
        run: dart format --output=none --set-exit-if-changed .

  floor-generator:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    container:
      image: google/dart:latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install dependencies
        working-directory: floor_generator
        run: pub get

      - name: Analyze
        working-directory: floor_generator
        run: dartanalyzer --fatal-infos --fatal-warnings .

      - name: Format
        working-directory: floor_generator
        run: dart format --output=none --set-exit-if-changed .

      - name: Run tests
        working-directory: floor_generator
        run: pub run test_cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: floor_generator
          file: ./floor_generator/coverage/lcov.info

  floor:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        include:
          - os: ubuntu-latest
            flutter-path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter-path: /Users/runner/hostedtoolcache/flutter
          - os: windows-latest
            flutter-path: C:\hostedtoolcache\windows\flutter
    timeout-minutes: 10

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Flutter
        uses: actions/cache@v2
        with:
          path: ${{ matrix.flutter-path }}
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL}}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter packages get
        working-directory: floor

      - name: Run generator
        run: flutter packages pub run build_runner build --delete-conflicting-outputs
        working-directory: floor

      - name: Analyze
        run: flutter analyze
        working-directory: floor

      - name: Install SQLite
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get -y update
          sudo apt-get -y install sqlite3 libsqlite3-dev

      - name: Run tests
        run: flutter test --coverage --coverage-path coverage/lcov.info
        working-directory: floor

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: floor
          file: ./floor/coverage/lcov.info

  floor-test:
    runs-on: macos-latest
    timeout-minutes: 10

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Flutter
        uses: actions/cache@v2
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL}}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter packages get
        working-directory: floor_test

      - name: Analyze
        run: flutter analyze
        working-directory: floor_test

      - name: Start iOS simulator
        run: xcrun simctl boot "iPhone 12"

      - name: Cache Xcode Derived Data
        uses: actions/cache@v2
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-derived-data

#      - name: Cache Flutter Framework
#        uses: actions/cache@v2
#        with:
#          path: floor_test/ios/Flutter
#          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
#          restore-keys: ${{ runner.os }}-pods-
#
#      - name: Cache Pods
#        uses: actions/cache@v2
#        with:
#          path: floor_test/ios/Pods
#          key: ${{ runner.os }}-pods-${{ hashFiles('floor_test/ios/Podfile.lock') }}
#          restore-keys: ${{ runner.os }}-pods-

      - name: Run integration tests
        working-directory: floor_test
        run: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/main_test.dart

  example:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Flutter
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_CHANNEL }}

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL}}

      - name: Install dependencies
        run: flutter packages get
        working-directory: example

      - name: Analyze
        run: flutter analyze
        working-directory: example

      - name: Install SQLite
        run: |
          sudo apt-get -y update
          sudo apt-get -y install sqlite3 libsqlite3-dev

      - name: Run tests
        run: flutter test
        working-directory: example
